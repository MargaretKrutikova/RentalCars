// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalCars.Web.Data;

namespace RentalCars.Web.Data.Migrations
{
    [DbContext(typeof(RentalCarsDbContext))]
    partial class RentalCarsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("RentalCars.Web.Data.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Mileage")
                        .HasColumnType("REAL");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b692dedd-6d32-4cc6-b9e1-5cc90377418e"),
                            Category = "Compact",
                            Mileage = 0f,
                            Model = "Zaporozhets"
                        },
                        new
                        {
                            Id = new Guid("96e8e24c-2892-4a26-9643-6f45594d24e4"),
                            Category = "Premium",
                            Mileage = 0f,
                            Model = "Lamborghini Huracán"
                        },
                        new
                        {
                            Id = new Guid("9e542e08-0cdb-4e97-8706-0098d706cb14"),
                            Category = "Minivan",
                            Mileage = 0f,
                            Model = "Volvo"
                        },
                        new
                        {
                            Id = new Guid("18d3bc01-f34f-4b82-9e13-7e0c48aaa111"),
                            Category = "Premium",
                            Mileage = 0f,
                            Model = "Porsche Panamera"
                        },
                        new
                        {
                            Id = new Guid("12df1935-375d-4a05-a0b9-c2db5aa22841"),
                            Category = "Compact",
                            Mileage = 0f,
                            Model = "Lada Riva"
                        });
                });

            modelBuilder.Entity("RentalCars.Web.Data.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b19a1ff-e68b-4929-ab8b-3c6f5ed094e4"),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@testsson.com"
                        });
                });

            modelBuilder.Entity("RentalCars.Web.Data.RentalBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BookingNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RentalReturnId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RentalReturnId")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("RentalCars.Web.Data.RentalReturn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Mileage")
                        .HasColumnType("REAL");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("RentalCars.Web.Data.RentalBooking", b =>
                {
                    b.HasOne("RentalCars.Web.Data.Car", "Car")
                        .WithMany("Bookings")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalCars.Web.Data.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalCars.Web.Data.RentalReturn", "RentalReturn")
                        .WithOne("RentalBooking")
                        .HasForeignKey("RentalCars.Web.Data.RentalBooking", "RentalReturnId");

                    b.Navigation("Car");

                    b.Navigation("Customer");

                    b.Navigation("RentalReturn");
                });

            modelBuilder.Entity("RentalCars.Web.Data.Car", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("RentalCars.Web.Data.RentalReturn", b =>
                {
                    b.Navigation("RentalBooking");
                });
#pragma warning restore 612, 618
        }
    }
}
